upstream testStream {
    server 127.0.0.1:9877;
    server 127.0.0.1:9878;
}

server {
    listen 80;
    server_name a.com;
    return 301 https://a.com$request_uri;
}
    

server {
    listen 443 ssl;
    ssl_certificate /a/b;
    ssl_certificate_key a.key;

    server_name a.com;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    
    location / {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        expires off;
        rewrite  ^/$  /home last;
    }
    

    location /api {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        expires off;
        proxy_connect_timeout      75s;
        proxy_send_timeout         900s;
        proxy_read_timeout         900s;
        
        if($abtest_country = yes) {
            proxy_pass http://testStream;
        }
        proxy_pass http://online;
    }


    location = /home {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        expires off;
        try_files $uri /index.html;
    }


    location /assets/ {
        gzip on;
        gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
        gzip_static on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private auth;
        gzip_disable "MSIE [1-6].";
        expires max;

        
        if($abtest_country = yes) {
            root /stage;
        }
        alias /assets/; 
    }
    

    location = /fav.ico {
        try_files $uri /fav.ico;
    }
    

    
    error_page 404 /404.html;
        location = /40x.html {
        root         /usr/share/nginx/html;
        internal;
    }
 

    
    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        root         /usr/share/nginx/html;
        internal;
    }
     
}
